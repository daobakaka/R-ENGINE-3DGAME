基础库： Opengl
！程序入口
添加入口文件：C++Steam52

！动画组件
添加动画控制器：AnimationController 内含动画类 AnimationData  --已完成

！碰撞组件
添加碰撞控制器：CollisonBody  --设计中

！物理组件
添加物理引擎：PhysicalEngine  --设计中

！资源管理逻辑
添加文件导入逻辑：FileLoad 支持 OBJ JPG PNG 格式  
添加图片采样库：stb_image

！游戏逻辑
添加基础游戏类：GameObject  
添加IComponent接口：可调用泛型方法，返回组件
添加综合脚本逻辑：IntergratedScripts
添加生命周期接口：MonoBehaviour
添加生命周期管理接口：LifecycleManager
添加协程管理器：CoroutineMethod  --可在函数外部直接调用，并提供初始化泛型方法，目前主要是实现异步初始化功能，后期拓展

！基础逻辑
添加摄像机控制器：Controller

！综合结构
添加综合结构：EnumTotal--模型注册类型MoldeClass、模型初始化步长结构体StepVector3

！模型管理
添加基础测试模型：Cube
添加自定义基础模型：CustomModel
添加模型综合管理类：MeshDataManager
添加脚本模型头：ScriptModel --管理模型的UpateVariant 方法，用于解耦对象内部的动态代码

！渲染逻辑
添加灯光模块：Light
添加着色器代码模块：Shader  --后面模型着色器可以单独重写
添加字体渲染模块：TextRender --目前部分字体渲染不清晰，后期改善

！Cpp测试模块
添加测试脚本：MicroCpp Monter Test lnlT.inl 
添加废弃代码：ObsoleteCode

！渲染逻辑
添加灯光模块：Light  --在Light头中添加灯光控制器LightSpawner，外部可以直接生成点光源并添加控制方法

！游戏逻辑
添加帧率控制方法： TControlFrameRate  

！渲染逻辑
添加通用光照着色器：未增加平行光的情况下，模型的表面暗淡，添加光照模型接收模块

！渲染逻辑
添加灯光渲染器：LightRender --将GL渲染代码封装在LightRender中，外部调用只需传入基础控制器、模型shadergram、灯光生成器 LightSpawner

！基础逻辑
添加场景旋转标识：Controller  -- 创建标识坐标 BuildWidgetShader， 待完善

！资源管理逻辑
添加场景基础形状：FileLoad --经纬球、圆柱体、圆锥体、立方体

！渲染逻辑
添加光源引导：点光源模型、手电筒模型、平行光模型  --LightModel

！渲染逻辑
添加光源控制：SpawnerLight -- ParallelController FlashLightController PointLightController

！渲染逻辑
添加光源衰减：Shader 距离平方衰减，默认衰减因子1 --1/(1+(s*distance*distance))

！渲染逻辑
增加天空盒：Cube --场景天空盒渲染，以前的测试模型，现在专用于天空盒渲染

！渲染逻辑
完善天空盒渲染：采用立方体贴图，采用专门的资源加载通道

！渲染逻辑
完善通用光照shader：添加多种常用贴图接口，添加多种常用控制参数

！渲染逻辑
完善灯光的选用方式：LightRender --目前可以选择场景中的点光源和聚光等的影响范围，自动判断并选取距离最近的4个点光源作为参考，可以变更，shader里面取消距离判断逻辑，在CPU上进行

！渲染逻辑
增加纹理附加模式：AttachTexture --添加材质拉伸，主要用于地板等，防模糊

！渲染逻辑 
增加阴影支持：LightRender --为每个光源添加阴影贴图的生成，Controller --构建，使用深度贴图着色器

！渲染逻辑
增加共享shader：ShaderManager --构建专门的shader编译，调用，传参逻辑，更加符合OPENGL状态机原理，新建CustomModelShder类用于构建，同时保留类的独立shader，以后可采取独立绘制

！基础逻辑
添加zoom缩放逻辑：Controller --改善摄像机旋转，增加ZOOM 滚轮缩放

！渲染逻辑
添加GPU实例化逻辑：CustomModelInstance --构建用于GPU实例化的高性能渲染类 

！协程逻辑
添加协程参数：CoroutineMethod  --  StartSpawnByTimerAnimation，存在由该方法渲染的对象，无法捕捉自身阴影的问题，但其他物体的阴影却可以投射过来

！渲染逻辑
修复字体渲染不清晰的问题： --glPixelStorei(GL_UNPACK_ALIGNMENT, 1)，字体的像素对齐方式需要调整到1

！基础逻辑
添加综合控制方法：ZGameLogic--添加SceneStart 和 SceneUpdate文件，将程序初始化,GL窗口初始化，游戏初始化，对象创建，阴影渲染，进行时主逻辑解耦 

！碰撞组件
添加基础碰撞组件：CollisionBody --设计盒型碰撞,采用八叉树进行复杂度为NlogN的计算

！物理组件
添加物理组件基本参数：PhysicalEngine --弹性系数、摩檫系数、加速度、重力、速度、位置、是否静态

！碰撞组件
添加碰撞组件基本参数：CollisionBody --碰撞scale(默认物体本身scale)，碰撞半径默认1,碰撞速度与物理速度关联，碰撞位置与物理位置关联，碰撞加速度与物理加速度关联，碰撞状态等

！游戏逻辑
添加基本物理碰撞处理逻辑： --设计物理运动阈值，完成基本盒型碰撞物理引擎模拟, 添加旋转（待优化）,碰撞体可设置锁轴，旋转阻尼两个参数

！碰撞组件
八叉树空间遍历逻辑设计：--OcTree,初步设计，待改进,调整八叉树删除节点逻辑判断，用特殊碰撞体代替大物体或者静态物体等在八叉树中的构建，可变更

！游戏逻辑
添加销毁、失活等逻辑：--LifecycleManager,CustomModel，初步设计销毁对象，失活对象等逻辑，可套用pool缓存池逻辑